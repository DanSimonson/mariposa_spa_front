[{"/Users/danielsimonson/Documents/react_projects/mariposa_spa_front/src/index.js":"1","/Users/danielsimonson/Documents/react_projects/mariposa_spa_front/src/Routes.js":"2","/Users/danielsimonson/Documents/react_projects/mariposa_spa_front/src/App.js":"3","/Users/danielsimonson/Documents/react_projects/mariposa_spa_front/src/Message.js":"4","/Users/danielsimonson/Documents/react_projects/mariposa_spa_front/src/Create.js":"5","/Users/danielsimonson/Documents/react_projects/mariposa_spa_front/src/components/slider/Slider_images.js":"6","/Users/danielsimonson/Documents/react_projects/mariposa_spa_front/src/components/Footer.js":"7","/Users/danielsimonson/Documents/react_projects/mariposa_spa_front/src/components/Navbar.js":"8"},{"size":253,"mtime":1610262060214,"results":"9","hashOfConfig":"10"},{"size":487,"mtime":1610446703033,"results":"11","hashOfConfig":"10"},{"size":3738,"mtime":1610920643355,"results":"12","hashOfConfig":"10"},{"size":7646,"mtime":1610873904104,"results":"13","hashOfConfig":"10"},{"size":3251,"mtime":1610448480021,"results":"14","hashOfConfig":"10"},{"size":1126,"mtime":1623554220332,"results":"15","hashOfConfig":"10"},{"size":459,"mtime":1610873258476,"results":"16","hashOfConfig":"10"},{"size":1201,"mtime":1610719585782,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"u65okj",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"21"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"21"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"21"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"21"},"/Users/danielsimonson/Documents/react_projects/mariposa_spa_front/src/index.js",["41"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Routes from \"./Routes\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n",["42","43"],"/Users/danielsimonson/Documents/react_projects/mariposa_spa_front/src/Routes.js",[],"/Users/danielsimonson/Documents/react_projects/mariposa_spa_front/src/App.js",["44","45","46"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport Slider from \"./components/slider/Slider_images\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nconst BodyWrap = styled.div``;\n/**\n * height: 90vh;\n  h1 {\n    color: green;\n    margin: 0 auto;\n  }\n */\nconst App = () => {\n  const [headerChange, setHeaderChange] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    const parralax = document.querySelector(\"#parallax\");\n    window.addEventListener(\"scroll\", () => {\n      let offset = window.pageYOffset;\n      //console.log(\"offset: \", offset);\n      //console.log(\"offest * 0.7\" + offset * 0.7);\n      parralax.style.backgroundPositionY = offset * 0.7 + \"px\";\n    });\n  }, []);\n\n  const sendMessage = () => {\n    //redirect the page\n    history.push(\"/message\");\n  };\n\n  return (\n    <>\n      <body>\n        <div className=\"header\" id=\"myHeader\">\n          <Navbar />\n        </div>\n        <BodyWrap>\n          <div className=\"bodyDiv\" id=\"parallax\">\n            <h2>Mariposa Therapeutic Spa</h2>\n            <p>\n              Enter the tranquility of the Hot Tub and immediately feel the\n              accumulated stress of daily life begin to dissipate. Let the\n              trained hands of our expert staff pamper your body, soothe your\n              mind and re-energize your soul.\n            </p>\n          </div>\n          <div className=\"bodyDiv\" id=\"sectionTwo\">\n            <div className=\"firstColorSection\">\n              <h1>Therapeutic Massage</h1>\n              <p>\n                Our massages soothe the nervous system, relieve stress, and warm\n                and loosen muscles. Choose from a variety of bodywork\n                techniques, or ask one of our licensed massage therapists for a\n                private consultation to aid in choosing the most beneficial\n                massage for you.\n              </p>\n            </div>\n            <div className=\"firstColorSection\">\n              <h1>body treatments</h1>\n              <p>\n                Our gentle body treatments hydrate, regenerate, and detoxify the\n                body as well as exfoliate the skin, relieve tight muscles, and\n                create an experience of deep relaxation.\n              </p>\n            </div>\n            <div className=\"firstColorSection\">\n              <h1>skin care</h1>\n              <p>\n                Your personalized skin care clinician will help restore vitality\n                to your skin through massages, masks, and hydration â€“ resulting\n                in skin that radiates beauty and health.\n              </p>\n            </div>\n          </div>\n          <div className=\"bodyDiv\"></div>\n          <div className=\"bodyDiv\">\n            <div>\n              <Slider />\n            </div>\n          </div>\n          <div className=\"bodyDiv\"></div>\n          <div className=\"bodyDiv\">\n            <h2>Appointments</h2>\n            <p>\n              Ready to make an appointment? Looking for more information about\n              our services?\n            </p>\n            <h2>CALL 509-74-RELAX (509-747-3529)</h2>\n            <p>Send us a message. Reserve a massage or treatment</p>\n            <a onClick={sendMessage} className=\"myButton\">\n              Reserve your Place\n            </a>\n            <p>\n              We make every attempt to confirm your appointment via text or\n              email, and we rely on you to provide up to date correct and\n              current information.\n            </p>\n          </div>\n        </BodyWrap>\n        <Footer />\n      </body>\n    </>\n  );\n};\n\nexport default App;\n","/Users/danielsimonson/Documents/react_projects/mariposa_spa_front/src/Message.js",["47","48","49","50","51"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport styled from \"styled-components\";\n\nimport axios from \"axios\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  Col,\n  Container,\n  Row,\n  FormFeedback,\n  InputGroupAddon,\n} from \"reactstrap\";\n\nconst BodyWrap = styled.div`\n  height: 90vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-image: url(https://res.cloudinary.com/dmglopmul/image/upload/v1610711005/projectPhotos/spa-business/massagetables.jpg);\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n`;\n\nconst initialFormState = {\n  lastName: \"\",\n  firstName: \"\",\n  startDate: \"\",\n  endDate: \"\",\n  content: \"\",\n};\n\nfunction Message() {\n  const [form, setForm] = useState(initialFormState);\n  const [submitted, setSubmitted] = useState(false);\n  const history = useHistory();\n  const [lastNameInValid, setLastNameInValid] = useState(false);\n  const [firstNameInValid, setFirstNameInValid] = useState(false);\n  const [inValidDate, setInValidDate] = useState(false);\n  const [messageInValid, setMessageInValid] = useState(false);\n\n  /****Methods****/\n  useEffect(() => {\n    //after submitting form, clear form fields\n    setForm(initialFormState);\n  }, [submitted]);\n  const handleChange = (event) => {\n    setForm({\n      ...form,\n      [event.target.name]: event.target.value,\n    });\n  };\n  const handleCancel = () => {\n    //redirect the page\n    history.push(\"/\");\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let validForm = validateForm();\n    console.log(\"forms: \", form);\n    if (validForm) {\n      axios\n        .post(`${process.env.REACT_APP_API}/posts`, form)\n        .then((response) => {\n          console.log(\"response: \", response);\n          //set boolean to clear form in useEffect hook\n          setSubmitted(true);\n          //redirect the page\n          history.push(\"/\");\n        })\n        .catch((err) => {\n          console.log(\"handleSubmit error: \", err);\n        });\n    }\n  };\n  const validateForm = () => {\n    let lastName = document.forms[\"sendMessageForm\"][\"lastName\"].value;\n    let firstName = document.forms[\"sendMessageForm\"][\"firstName\"].value;\n    let startDate = document.forms[\"sendMessageForm\"][\"startDate\"].value;\n    let message = document.forms[\"sendMessageForm\"][\"content\"].value;\n    if (lastName === \"\") {\n      setLastNameInValid(true);\n      return false;\n    } else {\n      if (firstName === \"\") {\n        setLastNameInValid(false);\n        setFirstNameInValid(true);\n        return false;\n      } else {\n        if (startDate === \"\") {\n          setLastNameInValid(false);\n          setFirstNameInValid(false);\n          setInValidDate(true);\n          return false;\n        } else {\n          if (!validateDate(startDate)) {\n            setInValidDate(true);\n            return false;\n          } else {\n            if (message === \"\") {\n              setInValidDate(false);\n              setMessageInValid(true);\n              return true;\n            } else {\n              setMessageInValid(false);\n            }\n          }\n        }\n      }\n    }\n    return true;\n  };\n\n  function validateDate(testdate) {\n    var date_regex = /^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/;\n    return date_regex.test(testdate);\n  }\n  /****end Methods***/\n\n  /****rendering****/\n  return (\n    <>\n      <div className=\"header\" id=\"myHeader\">\n        <Navbar />\n      </div>\n      <BodyWrap className=\"wrapStyle\">\n        <Container>\n          <h1\n            className=\"text-center\"\n            style={{\n              color: \"#6a0dad\",\n              textShadow: \"2px 2px 2px #000\",\n            }}\n          >\n            Send Message\n          </h1>\n          <Form\n            name=\"sendMessageForm\"\n            inverse\n            style={{\n              backgroundColor: \"#6a0dad\",\n              borderColor: \"#FFFF00\",\n              borderRadius: \"8px\",\n            }}\n            onSubmit={handleSubmit}\n          >\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n              <FormGroup>\n                <Label\n                  style={{\n                    color: \"#fff\",\n                  }}\n                  for=\"lastName\"\n                  className=\"mt-3\"\n                >\n                  Last Name\n                </Label>\n                <Input\n                  type=\"text\"\n                  name=\"lastName\"\n                  id=\"lastName\"\n                  placeholder=\"Last Name\"\n                  onChange={handleChange}\n                  value={form.lastName}\n                />\n                {!lastNameInValid ? null : (\n                  <Label style={{ color: \"red\" }}>Input cannot be empty</Label>\n                )}\n              </FormGroup>\n              <FormGroup>\n                <Label\n                  style={{\n                    color: \"#fff\",\n                  }}\n                  for=\"firstName\"\n                  className=\"mt-3\"\n                >\n                  First Name\n                </Label>\n                <Input\n                  type=\"text\"\n                  name=\"firstName\"\n                  id=\"firstName\"\n                  placeholder=\"First Name\"\n                  onChange={handleChange}\n                  value={form.firstName}\n                />\n                {!firstNameInValid ? null : (\n                  <Label style={{ color: \"red\" }}>Input cannot be empty</Label>\n                )}\n              </FormGroup>\n              <FormGroup>\n                <Label\n                  style={{\n                    color: \"#fff\",\n                  }}\n                  for=\"startDate\"\n                  className=\"mt-3\"\n                >\n                  Message Date\n                </Label>\n                <Input\n                  type=\"text\"\n                  name=\"startDate\"\n                  id=\"startDate\"\n                  placeholder=\"Message Date\"\n                  onChange={handleChange}\n                  value={form.startDate}\n                />\n                {!inValidDate ? null : (\n                  <Label style={{ color: \"red\" }}>\n                    Input format must be mm/dd/yyy\n                  </Label>\n                )}\n              </FormGroup>\n              <FormGroup>\n                <Label\n                  style={{\n                    color: \"#fff\",\n                  }}\n                  for=\"message\"\n                  className=\"mt-3\"\n                >\n                  Message\n                </Label>\n                <Input\n                  type=\"textarea\"\n                  name=\"content\"\n                  id=\"content\"\n                  placeholder=\"Message\"\n                  onChange={handleChange}\n                  value={form.content}\n                />\n                {!messageInValid ? null : (\n                  <Label style={{ color: \"red\" }}>Input cannot be empty</Label>\n                )}\n              </FormGroup>\n              <div className=\"mb-3 mt-3 text-right\">\n                <Button type=\"submit\" color=\"warning\" size=\"lg\">\n                  Submit\n                </Button>{\" \"}\n                <Button\n                  onClick={handleCancel}\n                  className=\"ml-2 mt-3 mb-3\"\n                  color=\"warning\"\n                  size=\"lg\"\n                >\n                  Cancel\n                </Button>\n              </div>\n            </Col>\n          </Form>\n        </Container>\n      </BodyWrap>\n      <Footer />\n    </>\n  );\n}\n\nexport default Message;\n","/Users/danielsimonson/Documents/react_projects/mariposa_spa_front/src/Create.js",["52"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\n//import Nav from \"./components/Nav\";\nconst Create = () => {\n  // state\n  const [state, setState] = useState({\n    //title: \"\",\n    lastName: \"\",\n    firstName: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    content: \"\",\n    user: \"\",\n  });\n  // destructure values from state\n  const { lastName, firstName, startDate, endDate, content, user } = state;\n  //onchange event handler\n  const handleChange = (name) => (event) => {\n    setState({ ...state, [name]: event.target.value });\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    axios\n      .post(`${process.env.REACT_APP_API}/posts`, {\n        lastName,\n        firstName,\n        startDate,\n        endDate,\n        content,\n      })\n      .then((response) => {\n        console.log(\"response.data: \", response.data);\n        // empty state\n        setState({\n          ...state,\n          lastName: \"\",\n          firstName: \"\",\n          startDate: \"\",\n          endDate: \"\",\n          content: \"\",\n        });\n        // show sucess alert\n        //alert(`Post from last name ${response.data.lastName} is created`);\n      })\n      .catch((error) => {\n        console.log(error.response);\n        alert(error.response.data.error);\n      });\n  };\n\n  return (\n    <div className=\"container p-5\">\n      <h1>CREATE POST</h1>\n      <br />\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label className=\"text-muted\">Last Name</label>\n          <input\n            onChange={handleChange(\"lastName\")}\n            value={lastName}\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Last Name\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label className=\"text-muted\">First Name</label>\n          <input\n            onChange={handleChange(\"firstName\")}\n            value={firstName}\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"First Name\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label className=\"text-muted\">Start Date</label>\n          <input\n            onChange={handleChange(\"startDate\")}\n            value={startDate}\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Start Date\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label className=\"text-muted\">End Date</label>\n          <input\n            onChange={handleChange(\"endDate\")}\n            value={endDate}\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"End Date\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label className=\"text-muted\">Content</label>\n          <textarea\n            onChange={handleChange(\"content\")}\n            value={content}\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Write some content...\"\n            required\n          />\n        </div>\n        <div>\n          <button className=\"btn btn-primary\">Create</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Create;\n","/Users/danielsimonson/Documents/react_projects/mariposa_spa_front/src/components/slider/Slider_images.js",["53","54","55"],"/Users/danielsimonson/Documents/react_projects/mariposa_spa_front/src/components/Footer.js",["56","57"],"import React, { Component } from \"react\";\nimport \"./Footer.css\";\n\nexport class Footer extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"foot\">\n        <footer>\n          <p>\n            &copy;2021{\" \"}\n            <a href=\"https://mariposaweb.net\" target=\"_blank\">\n              @mariposaweb.net\n            </a>\n          </p>\n        </footer>\n      </div>\n    );\n  }\n}\nexport default Footer;\n","/Users/danielsimonson/Documents/react_projects/mariposa_spa_front/src/components/Navbar.js",["58","59","60","61"],"import React, { useState, useEffect } from \"react\";\nimport \"./Navbar.css\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Navbar() {\n  let history = useHistory();\n\n  useEffect(() => {\n    const toggleButton = document.getElementsByClassName(\"toggle-button\")[0];\n    const navbarLinks = document.getElementsByClassName(\"navbar-links\")[0];\n\n    toggleButton.addEventListener(\"click\", () => {\n      navbarLinks.classList.toggle(\"active\");\n      //navbarLinks.classList.add(\"anime\");\n    });\n  }, []);\n  const goHome = () => {\n    history.push(\"/\");\n  };\n  const createMessage = () => {\n    history.push(\"/message\");\n  };\n\n  return (\n    <body>\n      <nav class=\"navbar\">\n        <div class=\"brand-title\">Mariposaweb</div>\n        <a href=\"#\" class=\"toggle-button\">\n          <span class=\"bar\"></span>\n          <span class=\"bar\"></span>\n          <span class=\"bar\"></span>\n        </a>\n        <div class=\"navbar-links\">\n          <ul>\n            <li>\n              <a onClick={goHome}>Home</a>\n            </li>\n            <li>\n              <a onClick={createMessage}>Send Message</a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </body>\n  );\n}\n\nexport default Navbar;\n",{"ruleId":"62","severity":1,"message":"63","line":5,"column":8,"nodeType":"64","messageId":"65","endLine":5,"endColumn":11},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"62","severity":1,"message":"70","line":17,"column":10,"nodeType":"64","messageId":"65","endLine":17,"endColumn":22},{"ruleId":"62","severity":1,"message":"71","line":17,"column":24,"nodeType":"64","messageId":"65","endLine":17,"endColumn":39},{"ruleId":"72","severity":1,"message":"73","line":94,"column":13,"nodeType":"74","endLine":94,"endColumn":59},{"ruleId":"62","severity":1,"message":"75","line":1,"column":38,"nodeType":"64","messageId":"65","endLine":1,"endColumn":48},{"ruleId":"62","severity":1,"message":"76","line":14,"column":3,"nodeType":"64","messageId":"65","endLine":14,"endColumn":11},{"ruleId":"62","severity":1,"message":"77","line":17,"column":3,"nodeType":"64","messageId":"65","endLine":17,"endColumn":6},{"ruleId":"62","severity":1,"message":"78","line":18,"column":3,"nodeType":"64","messageId":"65","endLine":18,"endColumn":15},{"ruleId":"62","severity":1,"message":"79","line":19,"column":3,"nodeType":"64","messageId":"65","endLine":19,"endColumn":18},{"ruleId":"62","severity":1,"message":"80","line":16,"column":61,"nodeType":"64","messageId":"65","endLine":16,"endColumn":65},{"ruleId":"62","severity":1,"message":"81","line":13,"column":10,"nodeType":"64","messageId":"65","endLine":13,"endColumn":20},{"ruleId":"62","severity":1,"message":"82","line":13,"column":22,"nodeType":"64","messageId":"65","endLine":13,"endColumn":35},{"ruleId":"83","severity":1,"message":"84","line":23,"column":5,"nodeType":"85","messageId":"86","endLine":23,"endColumn":10},{"ruleId":"87","severity":1,"message":"88","line":5,"column":3,"nodeType":"89","messageId":"90","endLine":7,"endColumn":4},{"ruleId":"91","severity":1,"message":"92","line":15,"column":13,"nodeType":"74","endLine":15,"endColumn":63},{"ruleId":"62","severity":1,"message":"93","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},{"ruleId":"72","severity":1,"message":"94","line":28,"column":9,"nodeType":"74","endLine":28,"endColumn":43},{"ruleId":"72","severity":1,"message":"73","line":36,"column":15,"nodeType":"74","endLine":36,"endColumn":35},{"ruleId":"72","severity":1,"message":"73","line":39,"column":15,"nodeType":"74","endLine":39,"endColumn":42},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["95"],"no-negated-in-lhs",["96"],"'headerChange' is assigned a value but never used.","'setHeaderChange' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useContext' is defined but never used.","'FormText' is defined but never used.","'Row' is defined but never used.","'FormFeedback' is defined but never used.","'InputGroupAddon' is defined but never used.","'user' is assigned a value but never used.","'imageIndex' is assigned a value but never used.","'setImageIndex' is assigned a value but never used.","no-dupe-keys","Duplicate key 'speed'.","ObjectExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'useState' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]